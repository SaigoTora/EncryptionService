@using EncryptionService.Core.Models.CryptoAnalysis.TranspositionAnalyzer
@using EncryptionService.Web.Models.EncryptionViewModels

@model EncryptionViewModel<TranspositionAnalyzerResult>

@{
	ViewData["Title"] = "Simple transposition cipher";
}

<h1 class="mb-5">Simple transposition cipher</h1>

<form class="w-100" asp-controller="TranspositionAnalyzer" asp-action="Encrypt" method="post">
	<div class="form__group field">
		<input asp-for="InputText" class="form__field" placeholder="Text" />
		<label asp-for="InputText" class="form__label">Text</label>
	</div>

	@if (Model != null)
	{
		if (Model.EncryptionResult != null)
		{
			if (Model.EncryptionResult.Indexes != null)
			{
				<span class="mb-2">
					{
					@foreach (int index in Model.EncryptionResult.Indexes)
					{
						@(index + 1)

						@:
					}
					}
				</span>
			}
			@await Html.PartialAsync("Encryption/_EncryptionResult",
					Model.EncryptionResult)
		}
	}

	<div class="form-group mb-3">
		<button type="submit" class="button">Encrypt</button>
	</div>
</form>

<form class="w-100" asp-controller="TranspositionAnalyzer" asp-action="Decrypt" method="post">
	<div class="form__group field">
		<input asp-for="EncryptedInputText" class="form__field" placeholder="Encrypted text" />
		<label asp-for="EncryptedInputText" class="form__label">Encrypted text </label>
	</div>

	<div class="form-group mb-3">
		<button type="submit" class="button">Decrypt</button>
	</div>

	@if (Model != null)
	{
		if (Model.DecryptionResult != null)
		{
			if (Model.DecryptionResult.AllPermutations != null)
			{
				@await Html.PartialAsync("Encryption/_EncryptionResult",
						Model.DecryptionResult)
				<span class="mb-3">Number of permutations: @Model.DecryptionResult.AllPermutations.Length</span>

				<table class="mb-4 table-bordered">
					<tr>
						<th class="p-2">№</th>
						<th class="p-2">Permutation</th>
					</tr>
					@for (int i = 0; i < Model.DecryptionResult.AllPermutations.Length; i++)
					{
						<tr>
							<td class="p-2">@(i + 1)</td>
							<td class="p-2">@Model.DecryptionResult.AllPermutations[i]</td>
						</tr>
					}
				</table>
			}
		}
	}

	<span asp-validation-for="InputText" class="text-danger"></span>
	<span asp-validation-for="EncryptedInputText" class="text-danger"></span>
</form>